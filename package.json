{
  "name": "project-genie",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "manifest:update": "tsx scripts/update-manifest.ts",
    "manifest:check": "cat PROJECT_MANIFEST.json | jq '.quickWins'",
    "session:end": "tsx scripts/end-session.ts",
    "session:start": "bash scripts/start-session.sh",
    "check:logger": "npx tsx scripts/check-logger-usage.ts",
    "check:db-patterns": "npx tsx scripts/check-db-patterns.ts",
    "fix:logger": "npx tsx scripts/fix-active-logger-issues.ts",
    "db:types": "supabase gen types typescript --project-id vnuieavheezjxbkyfxea > lib/database.types.tmp && mv lib/database.types.tmp lib/database.types.ts || echo 'Keeping existing database.types.ts'",
    "db:push": "supabase db push && npm run db:types",
    "dev": "NODE_OPTIONS='--max-old-space-size=4096' next dev",
    "local": "bash scripts/local-dev-only.sh",
    "rebuild": "lsof -ti:3000 | xargs kill -9 2>/dev/null && npm run dev",
    "build": "SKIP_ENV_VALIDATION=true next build --no-lint",
    "build-with-sitemap": "next build && next-sitemap",
    "start": "next start",
    "deploy:preview": "vercel deploy --prod=false",
    "deploy:production": "if [ \"$(git branch --show-current)\" = \"main\" ]; then vercel --prod; else echo '⛔ Error: Production deployment only allowed from main branch'; exit 1; fi",
    "deploy:safe": "vercel deploy --prod=false --confirm",
    "lint": "eslint",
    "type-check": "tsc --noEmit",
    "type-check:strict": "tsc --noEmit --skipLibCheck false",
    "build:check": "echo '🏗️ Testing build...' && next build --no-lint > /dev/null 2>&1 && echo '✅ Build check passed!' || (echo '❌ Build failed! Run npm run build for details' && exit 1)",
    "validate": "npm run type-check && npm run lint && npm run validate:custom",
    "validate:custom": "tsx scripts/validate-build.ts",
    "validate:all": "tsx scripts/validate-build.ts",
    "pre-commit": "npm run validate:all",
    "pre-push": "npm run validate:all",
    "seed": "tsx scripts/seed-test-data.ts",
    "db:reset": "supabase db reset",
    "test": "vitest",
    "test:ui": "npx tsx test-company-intelligence-comprehensive.ts",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:e2e": "npx playwright test tests/e2e/company-intelligence.spec.ts",
    "test:e2e:ui": "npx playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:ci": "playwright test --reporter=html",
    "test:company-intel": "npm run test:company-intel:unit && npm run test:company-intel:integration && npm run test:company-intel:e2e",
    "test:company-intel:unit": "vitest run tests/unit/company-intelligence-components.test.tsx",
    "test:company-intel:integration": "vitest run tests/integration/company-intelligence-api.test.ts",
    "test:company-intel:e2e": "playwright test tests/e2e/company-intelligence.spec.ts",
    "test:company-intel:watch": "vitest watch tests/unit/company-intelligence-components.test.tsx tests/integration/company-intelligence-api.test.ts",
    "test:all": "npm run test:ui && npm run test:e2e",
    "test:watch": "npx playwright test --ui --watch",
    "test:debug": "vitest --inspect-brk --inspect --logHeapUsage --threads=false",
    "test:docs": "tsx tests/run-suite.ts",
    "test:api": "vitest run --config vitest.config.api.ts",
    "test:api:quick": "RUN_FULL_API_TESTS=false vitest run --config vitest.config.api.ts",
    "test:api:full": "RUN_FULL_API_TESTS=true vitest run --config vitest.config.api.ts",
    "test:api:watch": "vitest watch --config vitest.config.api.ts",
    "cache:clear-pdfs": "tsx scripts/clear-pdf-cache.ts",
    "test:generation": "tsx scripts/test-document-generation.ts",
    "test:generation:comparable": "tsx scripts/test-document-generation.ts --doc comparable_projects",
    "test:generation:validate": "tsx lib/documents/test-runner.ts",
    "test:ui:manual": "MANUAL_TEST=true npx tsx test-company-intelligence-comprehensive.ts",
    "test:mcp": "npx tsx scripts/test-mcp-connections.ts",
    "mcp:toggle": "bash scripts/mcp-toggle.sh",
    "mcp:enable": "mv .mcp.json.disabled .mcp.json 2>/dev/null && echo '✅ MCP servers enabled - restart Claude Desktop' || echo '❌ MCP already enabled or no config found'",
    "mcp:disable": "mv .mcp.json .mcp.json.disabled 2>/dev/null && echo '✅ MCP servers disabled - restart Claude Desktop' || echo '❌ MCP already disabled or no config found'",
    "mcp:status": "if [ -f .mcp.json ]; then echo '✅ MCP servers ENABLED'; elif [ -f .mcp.json.disabled ]; then echo '⚠️ MCP servers DISABLED'; else echo '❌ No MCP config found'; fi",
    "prepare": "husky"
  },
  "dependencies": {
    "@ai-sdk/openai": "^2.0.19",
    "@dnd-kit/accessibility": "^3.1.1",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@hookform/resolvers": "^5.2.1",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@react-email/components": "^0.5.1",
    "@stripe/stripe-js": "^7.8.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.56.0",
    "@tanstack/react-query": "^5.85.5",
    "@tanstack/react-table": "^8.21.3",
    "@types/dompurify": "^3.0.5",
    "@types/turndown": "^5.0.5",
    "@upstash/redis": "^1.35.3",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "ai": "^5.0.22",
    "axios": "^1.11.0",
    "canvas": "^3.2.0",
    "chalk": "^5.6.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "csv-writer": "^1.6.0",
    "date-fns": "^4.1.0",
    "dompurify": "^3.2.6",
    "exceljs": "^4.4.0",
    "file-saver": "^2.0.5",
    "firecrawl": "^4.3.5",
    "framer-motion": "^12.23.12",
    "glob": "^11.0.3",
    "he": "^1.2.0",
    "highlight.js": "^11.11.1",
    "html-to-image": "^1.11.13",
    "html-to-text": "^9.0.5",
    "lucide-react": "^0.541.0",
    "mermaid": "^11.12.0",
    "next": "15.5.0",
    "next-seo": "^6.8.0",
    "next-sitemap": "^4.2.3",
    "node-fetch": "^3.3.2",
    "openai": "^5.15.0",
    "p-queue": "^8.1.0",
    "pg": "^8.16.3",
    "playwright": "^1.55.0",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "react-email": "^4.2.8",
    "react-hook-form": "^7.62.0",
    "react-icons": "^5.5.0",
    "react-intersection-observer": "^9.16.0",
    "react-markdown": "^10.1.0",
    "react-syntax-highlighter": "^15.6.6",
    "recharts": "^3.2.1",
    "rehype-highlight": "^7.0.2",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.1",
    "resend": "^6.0.1",
    "robots-parser": "^3.0.1",
    "sanitize-html": "^2.17.0",
    "sonner": "^2.0.7",
    "stripe": "^18.4.0",
    "tailwind-merge": "^3.3.1",
    "turndown": "^7.2.1",
    "user-agents": "^1.1.649",
    "zod": "^3.25.76",
    "zustand": "^5.0.8"
  },
  "engines": {
    "node": ">=18.17.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/cheerio": "^0.22.35",
    "@types/file-saver": "^2.0.7",
    "@types/he": "^1.2.3",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^20.19.11",
    "@types/pdf-parse": "^1.1.5",
    "@types/react": "^19.1.11",
    "@types/react-dom": "^19.1.7",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/react-window": "^1.8.8",
    "@types/sanitize-html": "^2.16.0",
    "@types/uuid": "^10.0.0",
    "@vitest/ui": "^3.2.4",
    "cheerio": "^1.1.2",
    "dotenv": "^17.2.1",
    "eslint": "^9",
    "eslint-config-next": "15.5.0",
    "eslint-config-prettier": "^10.1.8",
    "husky": "^9.1.7",
    "isomorphic-dompurify": "^2.26.0",
    "jsdom": "^26.1.0",
    "marked": "^16.2.1",
    "msw": "^2.10.5",
    "pdf-parse": "^1.1.1",
    "prettier": "^3.6.2",
    "tailwindcss": "^4",
    "tsx": "^4.20.5",
    "tw-animate-css": "^1.3.7",
    "typescript": "^5",
    "uuid": "^11.1.0",
    "vitest": "^3.2.4"
  }
}
